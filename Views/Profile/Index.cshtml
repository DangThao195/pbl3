@using PBL3_HK4.Entity
@model Customer

@{
ViewData["Title"] = "View Profile";
}

<div class="row my-3">
@* Empty *@
<div class="col-1">
</div>

@* Your Information *@
<div class="col-4">
    <div class="row mb-3">
        <div class="col-4 ">
            <img src="~/img/DangHuuLong.jpg" class="img-fluid" style="border-radius: 50%; border: 2px solid #000;" />
        </div>
        <div class="col-1"></div>
        <div class="col-7 d-flex flex-column justify-content-evenly">
            <p style="color: #314401; font-size: 18px;">You have earned <span style="color: #FFC107;">20 ★</span> points!</p>
            <a class="btn" style="background-color: #007BFF; color: white; border-radius: 20px; font-weight: bold; font-size: 12px;">
                <i class="bi bi-info-circle"></i> How to earn points?
            </a>
            <a class="btn btn-danger" style="color: white; border-radius: 20px; font-weight: bold; font-size: 12px;" asp-controller="Account" asp-action="SignIn">
                <i class="bi bi-box-arrow-right"></i> Log out
            </a>
        </div>
    </div>
    <div style="border: 1px solid; border-radius: 10px; background-color: #FFFFFF;" class="p-3" id="accountInfoContainer">
        <p class="text-center fw-bold mb-4" style="color: #314401; font-size: 20px">Account Information</p>

        <div id="formFieldsContainer" style="display: grid; grid-template-columns: 100px 1fr; gap: 10px; align-items: center; font-size: 14px; margin-bottom: 10px;">
            <!-- User Name -->
            <div>
                <label>User Name:</label>
            </div>
            <div>
                <input value="@Model.UserName" id="username" name="username" type="text" class="w-100 form-field" style="padding: 6px; border-radius: 4px; border: 1px solid #ccc; font-size: 14px;" readonly>
            </div>

            <!-- Password -->
            <div>
                <label>Password:</label>
            </div>
            <div>
                <input value="@Model.PassWord" id="password" name="password" type="password" class="w-100 form-field" style="padding: 6px; border-radius: 4px; border: 1px solid #ccc; font-size: 14px;" readonly>
            </div>

            <!-- Confirm Password (hidden initially) -->
            <div id="confirmPasswordLabel" style="display: none;">
                <label>Confirm Password:</label>
            </div>
            <div id="confirmPasswordField" style="display: none;">
                <input type="password" class="w-100 form-field" id="confirmPassword" name="confirmPassword" style="padding: 6px; border-radius: 4px; border: 1px solid #ccc; font-size: 14px;">
            </div>

            <!-- Name -->
            <div>
                <label>Name:</label>
            </div>
            <div>
                <input value="@Model.Name" id="name" name="name" type="text" class="w-100 form-field" style="padding: 6px; border-radius: 4px; border: 1px solid #ccc; font-size: 14px;" readonly>
            </div>

            <!-- Email -->
            <div>
                <label>Email:</label>
            </div>
            <div>
                <input value="@Model.Email" id="email" name="email" type="email" class="w-100 form-field" style="padding: 6px; border-radius: 4px; border: 1px solid #ccc; font-size: 14px;" readonly>
            </div>

            <!-- Gender -->
            <div>
                <label>Gender:</label>
            </div>
            <div>
                    <select id="sex" name="sex" class="w-100 form-field" style="padding: 6px; border-radius: 4px; border: 1px solid #ccc; font-size: 14px; background-color: #f5f5f5;" disabled>
                        @if (Model.Sex == "Male")
                        {
                            <option value="Male" selected>Male</option>
                        }
                        else
                        {
                            <option value="Male">Male</option>
                        }

                        @if (Model.Sex == "Female")
                        {
                            <option value="Female" selected>Female</option>
                        }
                        else
                        {
                            <option value="Female">Female</option>
                        }

                        @if (Model.Sex == "Other")
                        {
                            <option value="Other" selected>Other</option>
                        }
                        else
                        {
                            <option value="Other">Other</option>
                        }
                    </select>
            </div>

            <!-- Phone -->
            <div>
                <label>Phone:</label>
            </div>
            <div>
                <input value="@Model.Phone" id="phone" name="Phone" type="tel" class="w-100 form-field" style="padding: 6px; border-radius: 4px; border: 1px solid #ccc; font-size: 14px;" readonly>
            </div>

            <!-- Date -->
            <div>
                <label>Date of Birth:</label>
            </div>
            <div>
                <input value="@Model.DateOfBirth.ToString("yyyy-MM-dd")" id="dateOfBirth" name="dateOfBirth" type="date" class="w-100 form-field" style="padding: 6px; border-radius: 4px; border: 1px solid #ccc; font-size: 14px; background-color: #f5f5f5;" readonly>
            </div>

            <!-- Address -->
            <div>
                <label>Address:</label>
            </div>
            <div>
                <textarea id="address" name="address" class="w-100 form-field" style="padding: 6px; border-radius: 4px; border: 1px solid #ccc; min-height: 60px; font-size: 14px; background-color: #f5f5f5;" readonly>@Model.Address</textarea>
            </div>
        </div>

        <div id="editButtonContainer">
            <button id="editButton" class="btn w-100 fw-bold" style="padding: 8px 16px; background-color: #FFCC99 ; color: white; border-radius: 20px; letter-spacing: 2px;">
                <i class="bi bi-pencil-square"></i> EDIT YOUR INFORMATION
            </button>
        </div>
    </div>
</div>

@* Empty *@
<div class="col-3">
</div>

<div class="col-3">
    <p style="color: #6D4C41; font-size: 24px; font-weight: bold;">Your Discount Coupons</p>
    <div style="max-height: 85vh; overflow-y: auto; padding: 10px; margin-right: -5px;">
        <!-- Thêm padding và margin âm -->
        @for (int i = 0; i < 10; i++)
        {
            <div style="border-radius: 20px; background-color: #F0E6DA; border: 1px solid #D2B48C; overflow: hidden; margin-top: 20px; box-shadow: -6px 6px 5px rgba(0, 0, 0, 0.2);">
                <div style="border-bottom: 1px solid #D2B48C; padding-left: 12px;" class="py-1">
                    <p style="color: #C05621; font-size: 16px; font-weight: bold; margin: 0;">Spring Sale - 20% OFF</p>
                </div>
                <div style="border-bottom: 1px solid #D2B48C; color: #6D4C41; padding-left: 12px; font-size: 12px;" class="py-1">
                    <p style="margin: 0;">Description: Get 20% off on orders over $100</p>
                    <p style="margin: 0;">Validity: 01/03/2024 - 31/03/2024</p>
                </div>
                <a href="" style="background-color: #5A7D5A; color: white; display: block; width: 100%; margin: 0; padding: 0; text-align: center; text-decoration: none; font-weight: bold;">
                    Use Now
                </a>
            </div>
        }
    </div>
</div>

@* Empty *@
<div class="col-1">
</div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const editButtonContainer = document.getElementById('editButtonContainer');
    const formFields = document.querySelectorAll('.form-field');
    const confirmPasswordLabel = document.getElementById('confirmPasswordLabel');
    const confirmPasswordField = document.getElementById('confirmPasswordField');
    const confirmPasswordInput = document.getElementById('confirmPassword');

    let originalValues = {};

    // Khởi tạo nút EDIT ban đầu
    setupEditButton();

    function setupEditButton() {
        const editButton = document.getElementById('editButton');
        editButton.addEventListener('click', handleEditClick);
    }

    function handleEditClick() {
        // Lưu giá trị ban đầu
        formFields.forEach(field => {
            originalValues[field.name || field.id] = field.value;
        });

        // Cho phép chỉnh sửa các trường
        formFields.forEach(field => {
            // Giữ username là readonly
            if (field.id === 'username') {
                return;
            }
            
            field.readOnly = false;
            if (field.tagName === 'SELECT') {
                field.disabled = false;
            }
            field.style.backgroundColor = 'white';
        });

        // Hiển thị ô Confirm Password
        confirmPasswordLabel.style.display = 'block';
        confirmPasswordField.style.display = 'block';
        confirmPasswordInput.style.backgroundColor = 'white';

        // Thay thế nút EDIT bằng OK và CANCEL
        editButtonContainer.innerHTML = `
            <div class="d-flex" style="gap: 10px;">
                <button id="okButton" class="btn flex-grow-1 fw-bold" style="background-color: #80B500; color: white; border-radius: 20px; padding: 8px 0;">
                    OK
                </button>
                <button id="cancelButton" class="btn flex-grow-1 fw-bold" style="background-color: #dc3545; color: white; border-radius: 20px; padding: 8px 0;">
                    CANCEL
                </button>
            </div>
        `;

        // Xử lý nút OK
        document.getElementById('okButton').addEventListener('click', function() {
            disableEditing();
            hideConfirmPassword();
            showEditButton();
        });

        // Xử lý nút CANCEL
        document.getElementById('cancelButton').addEventListener('click', function() {
            formFields.forEach(field => {
                const fieldId = field.name || field.id;
                if (originalValues[fieldId] !== undefined) {
                    field.value = originalValues[fieldId];
                }
            });
            disableEditing();
            hideConfirmPassword();
            showEditButton();
        });
    }

    function disableEditing() {
        formFields.forEach(field => {
            field.readOnly = true;
            if (field.tagName === 'SELECT') {
                field.disabled = true;
            }
            field.style.backgroundColor = '#f5f5f5';
        });
    }

    function hideConfirmPassword() {
        // Ẩn ô Confirm Password
        confirmPasswordLabel.style.display = 'none';
        confirmPasswordField.style.display = 'none';
        confirmPasswordInput.value = ''; // Xóa giá trị nhập
    }

    function showEditButton() {
        editButtonContainer.innerHTML = `
            <button id="editButton" class="btn w-100 fw-bold" style="background-color: #FFCC99; color: white; border-radius: 20px; padding: 8px 0; letter-spacing: 2px;">
                <i class="bi bi-pencil-square"></i> EDIT YOUR INFORMATION
            </button>
        `;

        // Gắn lại sự kiện cho nút EDIT mới
        setupEditButton();
    }
});
</script>